*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*
*  CLASS input parameter file  *
*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*

> This example of input file, intended for CLASS beginners, lists all possibilities with detailed comments. 
> You can use a more concise version, in which only the arguments in which you are interested would appear. 
> Only lines containing an equal sign not preceded by a sharp sign "#" are considered by the code. Hence, do not write an equal sign within a comment, the whole line would be interpreted as relevant input.
> Input files must have an extension ".ini".

----------------------------
----> background parameters:
----------------------------

1) Hubble parameter : either 'H0' in km/s/Mpc or 'h' (default: 'h' set to 70)

#H0 = 72.
h =0.70

2) photon density: either 'T_cmb' in K or 'Omega_g' or 'omega_g' (default: 'T_cmb' set to 2.726)

T_cmb = 2.726
#Omega_g = 5.050601e-05
#omega_g = 2.47479449e-5

3) baryon density (default: 'Omega_b' set to 0.05)

Omega_b = 0.05
#omega_b = 0.0266691

4) ultra-relativistic species / massless neutrino density: either 'N_eff' or 'Omega_nur' or 'omega_nur' (default: 'N_eff' set to 3.04)

N_eff = 3.04
#Omega_nur = 3.486966e-05
#omega_nur = 1.70861334e-5


5) density of various dark matter types: 
   - for cdm: 'Omega_cdm' or 'omega_cdm' (default: 'Omega_cdm' set to 0.25)

Omega_cdm = 0.25
#omega_cdm = 0.110616

6) curvature: 'Omega_k' (default: 'Omega_k' set to 0)

Omega_k = 0.

6) cosmological constant / dark energy fluid : enter one parameters out of 'Omega_Lambda' or 'Omega_de', and infer the other one so that (sum_i Omega_i) equals (1 + Omega_k) (default: 'Omega_de' set to 0 and 'Omega_Lambda' to (1+Omega_k-Omega_tot))

# Omega_Lambda = 0.7
Omega_de = 0

7) scale factor today 'a_today' (arbitrary and irrelevant for most purposes) (default: set to 1)

# a_today = 1.

--------------------------------
----> thermodynamics parameters:
--------------------------------

1) primordial Helium fraction 'YHe' (default: set to 0.25)

YHe = 0.25

2) parametrization of reionization: 'reio_parametrization' must be one of 'reio_none', 'reio_camb', ... (default: set to 'reio_camb')

reio_parametrization = reio_camb

3) if 'reio_parametrization' set to 'reio_camb': enter one of 'z_reio' or 'tau_reio' (default: 'z_reio' set to 10)

z_reio = 10.
#tau_reio = 0.084522

----------------------------------------------------
----> define which perturbations should be computed:
----------------------------------------------------

1) list of output spectra requested ('tCl' for temperature Cls, 'pCl' for polarization CLs, 'lCl' for lensing potential Cls, 'MPk' for matter power spectrum P(k)). More than one letter allowed, can be attached or separated by arbitrary characters. Given this list, all non-zero auto-correlation and cross-correlation spectra will be automatically computed. Can be left blank if you do not want to evolve cosmological perturbations at all. (default: set to blanck, no perturbation calculation)

output = tCl,pCl

2) list of modes ('s' for scalars, 'v' for vectors, 't' for tensors). More than one letter allowed, can be attached or separated by arbitrary characters; letters can be small or capital. (default: set to 's')

modes = s
#modes = s,t

#3) list of initial conditions for scalars ('ad' for adiabatic, 'bi' for baryon isocurvature, 'cdi' for CDM isocurvature, 'nid' for neutrino density isocurvature, 'niv' for neutrino velocity isocurvature). More than one of these allowed, can be attached or separated by arbitrary characters; letters can be small or capital. (defaut: set to 'ad')

ic = ad
#ic = ad&bi

---------------------------------------------
----> define primordial perturbation spectra:
---------------------------------------------

1) primordial spectrum type ('analytic_Pk' for an analytic smooth function with amplitude, tilt, running, etc.; later, inflationary calculation will be added; analytic spectra with feature can also be added as a new type) (default: set to 'analytic_Pk')

P_k_ini type = analytic_Pk

2) parameters related to one of the primordial spectrum types (will only be read if they correspond to the type selected above)

2.a) for type 'analytic_Pk':

2.a.1) pivot scale in Mpc-1 (default: set to 0.05)

k_pivot = 0.05

2.a.2) scalar adiabatic perturbations: curvature power spectrum normalization (squared amplitude), tilt and running (default: set 'A_s' to 2.3e-9, 'n_s' to 1, 'alpha_s' to 0)

A_s_ad = 2.3e-9
n_s_ad = 1.
alpha_s_ad = 0.

2.a.3) isocurvature/entropy perturbations: for each mode xx ('xx' being one of 'bi', 'cdi', 'nid', 'niv', corresponding to baryon, cdm, neutrino density and neutrino velocity entropy perturbations), enter the entropy-to-curvature ratio f_xx, tilt n_xx and running alpha_xx; e.g. f_cdi of 0.5 means S_cdi/R equal to 0.5 at the pivot scale (default: set each 'f_xx' to 1, 'n_xx' to 1, 'alpha_xx' to 0)

f_bi = 1.
n_bi = 1.
alpha_bi = 0.

d_cdi=1.
n_cdi=1.
alpha_cdi= 0.

etc.

2.a.4) cross-correlation between different adiabatic/entropy mode: for each pair (xx, yy) where xx and yy are one of ad, bi, cdi, nid, nic, enter the correlation (parameter between -1 and 1, standing for the cosine of the cross-correlation angle) c_xx_yy, tilt n_xx_yy and the running alpha_xx_yy (default: set each 'c_xx_yy' to 0, 'n_xx_yy' to 1, 'alpha_xx_yy' to 0)

f_ad_bi = 0.
n_ad_bi = 1.
alpha_ad_bi = 0.

f_ad_cdi = -1.
n_ad_bi = 1.
alpha_ad_bi = 0.

etc.

2.a.5) tensor mode (if any): tensor-to-scalar power spectrum ratio, tilt, running at the pivot scale (default: set 'r' to 1, 'n_t' to 0, 'alpha_t' to 0)

r = 1.
n_t = 0.
alpha_t = 0.

----------------------------------------
----> parameters for the output spectra:
----------------------------------------

1) file name root 'root' for all output files (default: set 'root' to 'output/')
   (if scalar Cl requested, written to '<root>cls.dat';
    if tensor Cl requested, written to '<root>clt.dat';
    if P(k) requested, written to '<root>pk.dat')

root = output/test_

2) maximum l 'l_max_scalars', 'l_max_tensors' in Cls for scalars/tensors 
   (default: set 'l_max_scalars' to 2500, 'l_max_tensors' to 500)

l_max_scalars = 2500
l_max_tensors = 500

3) redshift 'z_pk' for P(k) file (default: set 'z_pk' to 0)

z_pk = 0.

4) maximum k in P(k). However a minimum value is automatically imposed in order to resolve BAOs; this value depends on cosmological parameters through the sound horizon (default: set to 0.1)

P_k_max = 1.

5) if the code is interfaced with routines that need to interpolate P(k,z) at various values of (k,z), enter 'z_max_pk', the maximum value of z at which such interpolations are needed (default: set to above value of 'z_pk')

z_max_pk = 0.

6) file name 'parameters' for writting all input/precision parameters which have been read; if blank, do not write parameters (default: blank)

parameters = param_output.ini

----------------------------------------------------
----> amount of information sent to standard output:
----------------------------------------------------

Increase integer values to make each module more talkative (default: all set to 0)

background_verbose = 1
thermodynamics_verbose = 1
perturbations_verbose = 2
bessels_verbose = 2
transfer_verbose = 2
primordial_verbose = 1
spectra_verbose = 2
output_verbose = 1
